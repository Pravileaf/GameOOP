ジャンル：技術専門書(プログラミング)
タイトル：オブジェクト指向ゲームプログラミング for XNA
コンセプト：デザインパターンを応用すればゲーム制作だって簡単になる
大きなゲームでも破綻しにくくなる
対象：下記ほぼすべてに該当する者
・インターネットに接続されているPCがある
・C#言語でXNA Frameworkを使用したゲームを作りたい
・猫でもわかるなど入門サイトレベルのことはわかる
・XNAも基礎は勉強したつもり
・ごくごく簡単なサンプル程度なら作れる
・でもちょっと大規模になったりすると破綻する
・ゲームとかになるともうわけわかめ
注意：この本はXNAの「入門書」ではありません。
入門書の「2冊目」のようなものとお考えください。
そもそもXNAやC#の教科書でもありません。


・はじめに
　・挨拶～執筆のきっかけ
　　・専門学校での経験
　　・教科書として(印税でこっそり小遣い稼ぎにもなるかな)
　・この本の立ち位置
　　・C#やXNAの入門書ではない、「ゲームプログラミング」の入門書である
　　・読者対象
　　　・C#とXNAの入門サイトにある程度のサンプルなら読めるし作れる
　　　・でもゲームとかちょっと大規模になるとわけわかめ
・目次
・まずはゲームを作ってみよう
　・ゲームプログラミングの入門書だからまずはゲームを作ってみましょう
　・何を作ろうか考えよう
　　・なるべく小さなゲームが望ましい
　　・小さな機能を繋げることで、少しずつ大きなものにしていく
　　・仕様書を作る癖を付けよう
　　　・脳内仕様だと集団で作れない
　　　・一人でやる場合でもメモ書き程度は作るべき
　　　・メモを書けば、何を以て完成とするかが把握しやすい
　・360ﾟ弾除けを作ってみよう
　　・ゲーム仕様
　　・プロジェクトの作成
　　・まず何も考えずに組んでみる
　　・動かしてみよう
・問題点を探ってみよう
　・カオス
　　・右を叩けば左が出て
　　・大規模になると破綻する原因
・あるものは使おう
　・車輪の再発明は学習目的に限り許される
　・なぜそれを使わないかを明確にしよう
　　・後述するがGameComponentをタスクに使用しない理由とか
・機能ごとに分けよう
　・サブルーチン
　・データ構造
　・構造化プログラミング
・データごとに分けよう
　・カプセル化
　　・オブジェクト指向の第一歩
・「動け！」だけで勝手に動くようにしよう
　・ポリモーフィズム
　・タスクマネージャ
・実はまだ問題がある
　・メモリ管理
　　・XBOX360で動かすと遅い
　　・解決策
　　　・Fryweightパターン
　　　・Stateパターン
　　　　・継承よりも移譲
　　　　・分岐よりも移譲
　・もっとスマートに美しく書こう
　　・たとえば、弾を作る処理
　　・コピペはバグの温床
　　・Builderパターン
　　・せっかちな人はFaçadeパターン
　・バグ対策
　　・テストをしよう
　　　・手動より自動
　　　・ユニットテストツール紹介
・あとがき
　・ゲームプログラミングの心得
　　・できるだけ小さく作れ
　　・プログラムに限った話ではない
　　・バシバシ公開して叩かれろ
　　　・ソースも公開してしまえ
・付録
　・サンプルプログラムのダウンロード
　・開発環境の設定
　・索引
・筆者自己紹介
